{"version":3,"sources":["Model/EdgeWithVerticesWithSubscripts.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,uBAAgD;AAChD,+BAAiC;AAEjC;IAA4D,kDAAI;IAK5D,wCAAY,aAAsB;QAAlC,YACI,kBAAM,aAAa,CAAC,SAEvB;QADG,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;IACzB,CAAC;IAEM,wDAAe,GAAtB,UAAuB,aAAmC;QACtD,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,wBAAwB,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,yBAAyB,CAAC;QACpC,CAAC;QAED,IAAI,YAAkC,CAAC;QACvC,IAAI,aAAmC,CAAC;QACxC,EAAE,CAAC,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACrC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACjC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;YAClC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;QACtC,CAAC;QAED,MAAM,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;IACpG,CAAC;IACL,qCAAC;AAAD,CAhCA,AAgCC,CAhC2D,OAAI,GAgC/D","file":"Model/EdgeWithVerticesWithSubscripts.js","sourcesContent":["import { Edge, VerticeWithSubscript } from './';\r\nimport * as lodash from 'lodash';\r\n\r\nexport default class EdgeWithVerticesWithSubscripts extends Edge {\r\n    firstVertice: VerticeWithSubscript;\r\n    secondVertice: VerticeWithSubscript;\r\n    visited: boolean;\r\n\r\n    constructor(partialObject?: object) {\r\n        super(partialObject);\r\n        this.visited = false;\r\n    }\r\n\r\n    public ToCanonicalForm(sourceVertice: VerticeWithSubscript): string[] {\r\n        if (lodash.isEmpty(this.firstVertice)) {\r\n            throw 'First vertice is empty';\r\n        }\r\n\r\n        if (lodash.isEmpty(this.secondVertice)) {\r\n            throw 'second vertice is empty';\r\n        }\r\n\r\n        let firstVertice: VerticeWithSubscript;\r\n        let secondVertice: VerticeWithSubscript;\r\n        if (sourceVertice == this.firstVertice) {\r\n            firstVertice = this.firstVertice;\r\n            secondVertice = this.secondVertice;\r\n        }\r\n        else {\r\n            secondVertice = this.firstVertice;\r\n            firstVertice = this.secondVertice;\r\n        }\r\n\r\n        return [firstVertice.Id, secondVertice.Id, firstVertice.label, this.label, secondVertice.label];\r\n    }\r\n}"],"sourceRoot":"/source/"}