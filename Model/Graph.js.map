{"version":3,"sources":["Model/Graph.ts"],"names":[],"mappings":";;AACA,+BAAiC;AAEjC;IAII,eAAY,aAAqB;QACvB,MAAO,CAAC,MAAM,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QAE1C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QAChB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QAChB,CAAC;IACL,CAAC;IAEM,uBAAO,GAAd;QACI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IACL,YAAC;AAAD,CAnBA,AAmBC,IAAA","file":"Model/Graph.js","sourcesContent":["import { Vertice, Edge, VerticeWithSubscript, EdgeWithVerticesWithSubscripts } from './';\r\nimport * as lodash from 'lodash';\r\n\r\nexport default class Graph {\r\n    V: Vertice[];\r\n    E: Edge[];\r\n\r\n    constructor(partialObject?: Graph) {\r\n        (<any>Object).assign(this, partialObject);\r\n\r\n        if (!this.V) {\r\n            this.V = [];\r\n        }\r\n\r\n        if (!this.E) {\r\n            this.E = [];\r\n        }\r\n    }\r\n\r\n    public IsEmpty(): boolean {\r\n        return lodash.isEmpty(this.V) && lodash.isEmpty(this.E);\r\n    }\r\n}"],"sourceRoot":"/source/"}